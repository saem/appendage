<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

    <!--

        @TODO

        * TUUID for sequences, assuming they're efficient
        * naming convention for primary keys and foreign keys
        * indicees
        * views

    -->
    
    <changeSet id="1" author="saem">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="users" />
            </not>
        </preConditions>

        <createTable tableName="users">
            <column name="user_id" type="bigint" autoIncrement="true">
                <constraints primaryKeyName="pk_users_user_id" primaryKey="true" />
            </column>
        </createTable>
    </changeSet>
    
    <changeSet id="2" author="saem">
        <preConditions onFail="MARK_RAN">
            <tableIsEmpty tableName="users" />
        </preConditions>
        
        <!-- System User -->
        <insert tableName="users">
            <column name="user_id" value="1" />
        </insert>
    </changeSet>
        
    <changeSet id="3" author="saem">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="events" />
            </not>
        </preConditions>
        
        <!-- Events -->
        
        <createTable tableName="events">
            <column name="sequence" type="bigint" autoIncrement="true">
                <constraints primaryKeyName="pk_events_sequence" primaryKey="true" />
            </column>
            <column name="event" type="varchar(255)">
                <constraints nullable="false" />
            </column>
            <column name="version" type="int">
                <constraints nullable="false" />
            </column>
            <column name="user_id" type="bigint">
                <constraints foreignKeyName="fk_events_users"
                             referencedTableName="users"
                             referencedColumnNames="user_id"
                             nullable="false" />
            </column>
            <column name="when" type="datetime">
                <constraints nullable="false" />
            </column>
        </createTable>
    </changeSet>
        
    <!-- Users -->
        
    <changeSet id="4" author="saem">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="user_states" />
            </not>
        </preConditions>
        
        <createTable tableName="user_states">
            <column name="sequence" type="bigint">
                <constraints primaryKeyName="pk_user_states_sequence" 
                             primaryKey="true"
                             foreignKeyName="fk_user_states_events"
                             referencedTableName="events"
                             referencedColumnNames="sequence" />
            </column>
            <column name="user_id" type="bigint">
                <constraints foreignKeyName="fk_user_states_users"
                             referencedTableName="users"
                             referencedColumnNames="user_id"
                             nullable="false" />
            </column>
            <column name="username" type="varchar(255)">
                <constraints nullable="false" />
            </column>
            <column name="email" type="varchar(255)">
                <constraints nullable="false" />
            </column>
            <column name="password" type="varchar(60)">
                <constraints nullable="false" />
            </column>
            <column name="is_disabled" type="bool" defaultValueBoolean="false">
                <constraints nullable="false"/>
            </column>
        </createTable>
        
        <!--
        TODO:
            * index by (user_id, sequence) for fast max(sequence) group by user_id queries (current_users view)?
        -->
        
    </changeSet>
    
    <changeSet id="5" author="saem">
        <!-- Ignore this, will be fixed up and used for security in the future -->
        
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="user_api_keys" />
            </not>
        </preConditions>
        
        <createTable tableName="user_api_keys">
            <column name="sequence" type="bigint">
                <constraints primaryKeyName="pk_user_api_keys_sequence" 
                             primaryKey="true"
                             foreignKeyName="fk_user_api_keys_events"
                             referencedTableName="events"
                             referencedColumnNames="sequence" />
            </column>
            <column name="user_id" type="bigint">
                <constraints foreignKeyName="fk_user_api_keys_users"
                             referencedTableName="users"
                             referencedColumnNames="user_id"
                             nullable="false" />
            </column>
            <column name="api_key" type="varchar(100)">
                <constraints nullable="false" />
            </column>
            <column name="secret" type="varchar(100)">
                <constraints nullable="false" />
            </column>
            <column name="revoked" type="boolean" defaultValueBoolean="false">
                <constraints nullable="false" />
            </column>
        </createTable>
        
        <addUniqueConstraint tableName="user_api_keys" columnNames="user_id, api_key" />
    </changeSet>
    
    <changeSet id="6" author="saem">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="user_authorities" />
            </not>
        </preConditions>
        
        <createTable tableName="user_authorities">
            <column name="sequence" type="bigint">
                <constraints primaryKeyName="pk_user_authorities_sequence" 
                             primaryKey="true"
                             foreignKeyName="fk_user_api_keys_events"
                             referencedTableName="events"
                             referencedColumnNames="sequence" />
            </column>
            <column name="user_id" type="bigint">
                <constraints foreignKeyName="fk_user_authorities_users"
                             referencedTableName="users"
                             referencedColumnNames="user_id"
                             nullable="false" />
            </column>
            <column name="authority" type="varchar(255)">
                <constraints nullable="false" />
            </column>
        </createTable>
    </changeSet>
    
    <changeSet id="7" author="saem">
        <preConditions onFail="MARK_RAN">
            <not>
                <viewExists viewName="current_users" />
            </not>
        </preConditions>
        
        <createView viewName="current_users">
            select
              user_states.user_id,
              user_states.sequence,
              user_states.username,
              user_states.email,
              user_states.password,
              user_states.is_disabled
            from user_states
              inner join
                (select max(sequence) as sequence, user_id from user_states group by user_id) as current_user_states
                  ON (user_states.user_id = current_user_states.user_id 
                  and user_states.sequence = current_user_states.sequence)
            where user_states.is_disabled = false
        </createView>

        <!--
        TODO:
            * might be worth making this a materialized view
        -->
    </changeSet>
    
    <changeSet id="8" author="saem">
        <preConditions>
            <not>
                <viewExists viewName="current_api_keys" />
            </not>
        </preConditions>
        
        <createView viewName="current_api_keys">
            select
              user_api_keys.user_id,
              user_api_keys.sequence,
              user_api_keys.api_key,
              user_api_keys.secret
            from user_api_keys
              inner join
                (select max(sequence) as sequence, user_id from user_api_keys group by user_id) as current_keys
                  ON (user_api_keys.user_id = current_keys.user_id
                  and user_api_keys.sequence = current_keys.sequence)
            where user_api_keys.revoked = false
        </createView>

        <!--
        TODO:
            * might be worth making this a materialized view
        -->
    </changeSet>
    
    <changeSet id="9" author="saem">
        <preConditions>
            <not>
                <viewExists viewName="current_api_users" />
            </not>
        </preConditions>
        
        <createView viewName="current_api_users">
            select
              current_users.user_id,
              current_users.sequence,
              current_users.username,
              current_users.password,
              current_users.email,
              current_api_keys.api_key,
              current_api_keys.secret
            from current_users
              inner join
                current_api_keys ON (current_api_keys.user_id = current_users.user_id)
        </createView>

        <!--
        TODO:
            * might be worth making this a materialized view
        -->
    </changeSet>

</databaseChangeLog>
